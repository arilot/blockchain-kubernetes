apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "bitcoind.fullname" . }}
  labels:
{{ include "bitcoind.labels" . | indent 4 }}
spec:
  serviceName: "{{ .Release.Name }}-service"
  replicas: {{ .Values.replicaCount }} # by default is 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "bitcoind.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "bitcoind.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      {{- with .Values.securityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        args: ["-datadir={{ .Values.bitcoind.base_path }}"]
        workingDir: "{{ .Values.bitcoind.base_path }}"
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        ports:
        {{- range $val := .Values.service.ports }}
        - containerPort: {{ $val.port }}
          name: "{{ $val.name }}"
          protocol: {{ $val.protocol | default "TCP" }}
        {{- end }}
        volumeMounts:
        - name: bitcoind-pvc
          mountPath: {{ .Values.bitcoind.base_path }}
        - name: scripts
          mountPath: /scripts
        livenessProbe:
          exec:
            command:
              - /bin/sh
              - /scripts/check_node_health.sh
              - "{{ .Values.bitcoind.base_path }}"
              - "1200"
              - last_synced_block.txt
        {{- with .Values.livenessProbe }}
          {{- toYaml . | nindent 10 }}
        {{- end }}
      {{- if .Values.configurationFile }}
      initContainers:
      # we keep this useless copy to be able to customize config at runtime, such as update rpc creds from other sources
      - name: copy-bitcoind-config
        image: busybox
        command: ['sh', '-c', 'cp /configmap/bitcoin.conf {{ .Values.bitcoind.base_path }}/bitcoin.conf']
        volumeMounts:
        - name: bitcoind-config
          mountPath: /configmap
        - name: bitcoind-pvc
          mountPath: {{ .Values.bitcoind.base_path }}
      {{- end }}
      volumes:
      {{- if .Values.configurationFile }}
      - name: bitcoind-config
        configMap:
          name: "{{ .Release.Name }}-config"
      {{- end }}
      - name: scripts
        configMap:
          name: "{{ .Release.Name }}-scripts"
  volumeClaimTemplates:
  - metadata:
      name: bitcoind-pvc
    spec:
      accessModes:
        - {{.Values.persistence.accessMode }}
      {{- if .Values.persistence.storageClass }}
      {{- if (eq "-" .Values.persistence.storageClass) }}
      storageClassName: ""
      {{- else }}
      storageClassName: "{{ .Values.persistence.storageClass }}"
      {{- end }}
      {{- end }}
      resources:
        requests:
          storage: {{ .Values.persistence.size }}
      volumeMode: Filesystem

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "theta.fullname" . }}
  labels:
{{ include "theta.labels" . | indent 4 }}
spec:
  serviceName: "{{ .Release.Name }}-service"
  replicas: {{ .Values.replicaCount }} # by default is 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "theta.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "theta.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      annotations:
        checksum/configmap.yaml: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret.yaml: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
    spec:
      {{- with .Values.securityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      serviceAccountName: {{ template "theta.serviceAccountName" . }}
      securityContext:
      {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
      - name: {{ .Chart.Name }}
        securityContext:
        {{- toYaml .Values.securityContext | nindent 10 }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        args: ["start", "--config", "{{ .Values.theta.base_path }}/validator/","--password","$(node_passwd)"]
        envFrom:
        - secretRef:
            name: "{{ .Release.Name }}-secret"
        workingDir: "{{ .Values.theta.base_path }}"
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        ports:
        - containerPort: {{ .Values.service.rpcPort }}
          name: "{{ .Values.service.rpcPortName }}"
          protocol: "TCP"
        - containerPort: {{ .Values.service.p2pPort }}
          name: "{{ .Values.service.p2pPortName }}"
          protocol: "TCP"
        volumeMounts:
        - name: theta-pvc
          mountPath: {{ .Values.theta.base_path }}
        livenessProbe:
          exec:
            command:
              - /bin/bash
              - /scripts/check_node_health.sh
              - "{{ .Values.theta.base_path }}"
              - "{{ .Values.theta.maxHealthyAge }}"
              - last_synced_block.txt
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.livenessProbe.successThreshold }}
          failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
        lifecycle:
          preStop:
            exec:
              # we don't need to poll some resources, as we stop PID 1, just sleep after stop command to tell k8s - "shutdown is in process"
              command:
                - /bin/sh
                - -c
                - "kill 1; sleep {{ .Values.terminationGracePeriodSeconds }}"
      initContainers:
      # copy integration
      - name: copy-integration
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command: ['sh', '-c', 'cp -a /opt/theta/integration/mainnet/validator {{ .Values.theta.base_path }}']
        volumeMounts:
          - name: theta-pvc
            mountPath: {{ .Values.theta.base_path }}

      {{- if .Values.configurationFile }}
      # copy config
      - name: copy-theta-config
        image: busybox
        command: ['sh', '-c', 'cp /config/{{ .Values.theta.configurationFileName }} {{ .Values.theta.base_path }}/validator/{{ .Values.theta.configurationFileName }}']
        volumeMounts:
        - name: theta-config
          mountPath: /config
        - name: theta-pvc
          mountPath: {{ .Values.theta.base_path }}
      {{- end }}
      volumes:
      {{- if .Values.configurationFile }}
      - name: theta-config
        configMap:
          name: "{{ .Release.Name }}-config"
      {{- end }}
  volumeClaimTemplates:
  - metadata:
      name: theta-pvc
    spec:
      accessModes:
        - {{.Values.persistence.accessMode }}
      {{- if .Values.persistence.storageClass }}
      {{- if (eq "-" .Values.persistence.storageClass) }}
      storageClassName: ""
      {{- else }}
      storageClassName: "{{ .Values.persistence.storageClass }}"
      {{- end }}
      {{- end }}
      resources:
        requests:
          storage: {{ .Values.persistence.size }}
      volumeMode: Filesystem
